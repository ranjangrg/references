 Javascript Cheat Sheet
========================

Q.	Call js function by entering a key (instead of using buttons)
A.	function allowEnterKeyToAdd() {
		var inputAtForm = document.getElementsByClassName("submit-form");
    		var i;
	    	for (i = 0; i < inputAtForm.length; i++) {
			// iterating through the divs with the same class
			inputAtForm[i].addEventListener("keyup", function(event) {            
				event.preventDefault(); // cancel the default action (if any)
				var e = event || window.event;
				if (e.keyCode == 13) { // when enter key (code:13) is pressed
					//alert("Function works");
					addLoc(); // it is a 'js' function/method
				}
			});
		}
	}
	
Q.	Trigger a Button click on Enter (from w3schools.com)
A.	// Get the input field
	var input = document.getElementById("myInput");

	// Execute a function when the user releases a key on the keyboard
	input.addEventListener("keyup", function(event) {
	// Cancel the default action, if needed
	event.preventDefault();
	// Number 13 is the "Enter" key on the keyboard
	if (event.keyCode === 13) {
		// Trigger the button element with a click
		document.getElementById("myBtn").click();
	}
	});

Q.	Add table rows via javascript (from w3schools.com)
A.	// Find a <table> element with id="myTable":
	var table = document.getElementById("myTable");

	// Create an empty <tr> element and add it to the 1st position of the table:
	var row = table.insertRow(0);
	
	// Insert new cells (<td> elements) at the 1st and 2nd position of the "new" <tr> element:
	var cell1 = row.insertCell(0);
	var cell2 = row.insertCell(1);
	
	// Add some text to the new cells:
	cell1.innerHTML = "NEW CELL1";
	cell2.innerHTML = "NEW CELL2";

Q.	Cast/Parse string to float
A.	Basic casting to a float number:
	var num = parseFloat(document.getElementById(amtid4).innerHTML);

	Formatting the number further (e.g. 2 decimal places):
	var num = parseFloat(document.getElementById(amtid4).innerHTML).toFixed(2);

Q.	Empty <a> link that doesn't reload page
A.	<a href="#" onclick="alert(); return false;"> Link </a> 
	It alerts then does nothing. Can add some functions before doing nothing ... okay!?

Q.	Read a file
A.	Use html5:
		<input type="file" id="csv-file" name="files[]"/> // name = array of files
	In Javascript:
		Set a file: 
			var file = document.getElementById("csv-file").files[0]; // First file from the selected files
		Set reader: 
			var reader = new FileReader();
		Read the specific file: 
			reader.readAsText(file);
		Contents: 
			`reader.result` contains the contents of the file.

Q.	Number of rows in a table.
A.	var x = document.getElementById("myTable").rows.length;

Q.	Loop through table rows and columns.
A.	var table = document.getElementById("mytab1");
	for (var i = 0, row; row = table.rows[i]; i++) {
		//iterate through rows
		//rows would be accessed using the "row" variable assigned in the for loop
		for (var j = 0, col; col = row.cells[j]; j++) {
			//iterate through columns
			//columns would be accessed using the "col" variable assigned in the for loop
		}  
	}

Q.	Change number of entries shown in DataTable
A.	$('#example').dataTable( {
  		"pageLength": 50
	} );
	OR
	var dt = $('#data-table').DataTable({
	
		data: [],
	
		pageLength: 15, // number of entries shown
	
		deferRender: true,

Q.	Sort data in D3.js + Get first 15 values (largest/smallest)
A.	// Returns the top 15 vtops !! Returns whole row
	
function calculateTop15Vtop() {
	
		var _data = dt.data().sort(function(a,b) {return b.m - a.m;}); // Sort data by Vtop first
	
		_data = _data.filter(function(d,i) {return i < 15;}); // Get the first 15 values
	
		return _data; // !!returns the whole row

	}

Q.	To select an input defined by aria-controls and change the value
A.	$("input[aria-controls='dt-17063']").val(1529443675)
	
	Source: https://stackoverflow.com/questions/45689156/set-value-to-an-aria-controls-input
	Change the selector like this.your selector target the id not the aria-controls so use with attr selector.Also Input not have text() property so change with val()

	function showMessage() {
 		var message = jQuery("#textToDisplay").val();
	 	$("input[aria-controls=example]").val(message);
  	}
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
	<input type="text" id="textToDisplay" />
	<input type="button" value="Add message" onClick="showMessage()" />
	<input aria-controls="example" type="text">

Q.	Set ID to elements without ID.
A.	$('.event-table label input').attr('id', 'searchMod'); // Giving ID to the search Input in mod table
	For an 'input' element inside element with class 'event-table' and within a 'label' element.

Q.	Trigger a key up (as in manual key up) when onchange doesn't detect change (esp when done via command)
A.	$('#elementID').keyup();
	Triggers a keyup event inside the element with ID 'elementID' 

Q.	Store Filter settings in DC.js
A.	names = []; filters = [];
	for (var chart of dc.chartRegistry.list()) { names.push(chart.anchor()); filters.push(chart.filters())}

Q.	Change filter in DC.js manually/programmatically
A.	directionChart.filter('Wat.'); // Selects only Wat. values
	directionChart.render(); // renders the chart again to reflect the changes

Q.	Store and aplly filters in DC.js
A.	In Javascript code,
	// Stores All filter settings
	var currentFilters = [];
	
	// Stores all the filters used to 'currentFilters'
	function storeAllFilters() {
		currentFilters = []; // empty list first
		for (var i = 0; i < dc.chartRegistry.list().length; i++){
			var chart = dc.chartRegistry.list()[i];	
			for (var j = 0; j < chart.filters().length; j++){
				currentFilters.push({ChartID: chart.chartID(), Filter: chart.filters()[j]});
			}
		}
	}

	// Applies filters stored in 'currentFilters' list
	function applyStoredFilters() {
		for (var i = 0; i< currentFilters.length; i++){
			var filter = currentFilters[i].Filter;
			if(filter instanceof Array) filter = dc.filters.RangedFilter(filter[0], filter[1]);
			dc.chartRegistry.list()[currentFilters[i].ChartID-1].filter(filter);
		}
	}

	function reloadData() {
		storeAllFilters(); 
		updateData(document.getElementById('location').options[document.getElementById('location').options.selectedIndex].value, document.getElementById('axis').value); 
	}

	function loadFilters() {
		applyStoredFilters();
		dc.renderAll();
	}

Q.	Check if a div exists
A.	JS:
	document.getElementById("elementId") returns null if it doesn't exist
	JQuery:
	if ($('#diff-chart').length > 0) { // do something }
	
Q.	(LEAFLET.js)	Add a button to a map
A.	L.easyButton('fa-comment', function (){alert();}).addTo(map);
	// 'map' is the variable containing the map

Q.	(LEAFLET.js)	Remove all Layers
A.	map.eachLayer(function (layer) { // Looping through each layer in the map
		console.log(layer);
		// Check if layer.feature is defined and remove layers whose value exceeds 100
		if (layer.feature && layer.feature.properties.value > 100 ) {map.removeLayer(layer);}
	});

Q.	(DC.js) Remove labels from axis of barchart in DC.js
A.	.xAxis().tickValues([]);
	.yAxis().tickValues([]);

Q.	(jQuery) Quick tooltip
A.	html: (using fontawesome for this example)
		<i data-toggle="tooltip" title="Content of the tooltip" class="fa fa-refresh" aria-hidden="true" onclick="javascript: renderDiffChart();"> </i> 
	javascript:
		$(function() {
			$('[data-toggle="tooltip"]').tooltip();
		}
	css: (fix tooltip width)
		div.ui-tooltip {
			max-width: 150px;
		}

Q.	Clone an array (no reference)
A.	var clone = myArray.slice(0);

Q.	(D3.js) Remove selection
A.	d3.selectAll("rect.class1").remove(); // Removes all rect tags with class "class1"

Q.	(DC.js) Event and Listeners
A.	API URL: https://dc-js.github.io/dc.js/docs/html/dc.baseMixin.html 
	Search on(event, listener)

Q.	(D3.js) Change style (when attr doesn't work)
A.	d3.selectAll('rect').style('fill', 'black'); // Changes fill colour of every rect tags 

Q.	(D3.js) Selections API
A.	URL: http://d3indepth.com/selections/

Q.	(D3.js |& DC.js) Fix overlapping x-axis lables
A.	chart.on('renderlet', function (c) {
		// selcting x axis texts from the chart and transforming them
		c.selectAll('g.x text').attr('transform','translate(-10, 10) rotate(315)');
	});
	Source: https://github.com/dc-js/dc.js/issues/731#issuecomment-59599016

Q.	Remove all characters after a certain character in a string
A.	let data = "2015/01/01: 100.5";
	let newData = data.split(':')[0]; // splits where ':' is present into array. Then choose the first element
	// newData is "2015/01/01"

Q.	Convert Date(string) to timestamp
A.	var barDate = "1 September 2014";
	var dt = Date.parse(barDate); // dt = 1409522400000 (timestamp milliseconds)
	var dtObj = new Date(bardate); // creates a date object (so more date methods)

Q.	Get id of parent element (e.g. get id of <table> from <td>
A.	var parentid = currentNode.parentNode.id;
	ALSO possible
	var grandparentid = currentNode.parentNode.parentNode.id;

Q.	Variable values within strings
A.	Using ` quotes. `something blah ${<varName>}`.  Example:
	let code = "int i = 100;";
	var fileContent = `File content:\n ${code} \n End`;

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	

Q.	
A.	